ext {
    equalsverifier      = '3.4.1'
    findbugsJsr305      = '3.0.0'
    groovy              = '2.5.9'
    guava               = '28.2-jre'
    hibernate           = '5.4.11.Final'
    hibernateJpa        = '1.0.2.Final'
    hibernateValidator  = '5.3.6.Final'
    hikariCp            = '3.4.2'
    javaxAnnotation     = '1.3.2'
    javaxValidator      = '2.0.1.Final'
    joengenduvel        = '1.0.2'
    projectLombok       = '1.18.12'
    mapstruct           = '1.3.1.Final'
    spock               = '1.3-groovy-2.5'
    springBoot          = '2.2.4.RELEASE'
    spring              = '5.2.3.RELEASE'
    springData          = '2.2.4.RELEASE'
    springdoc           = '1.4.8'
    slf4j               = '1.7.30'
    h2Db                = '1.4.200'
}

ext.dependencies = [
        joengenduvel          : "be.joengenduvel.java.verifiers:to-string:$ext.joengenduvel",
        findbugsJsr305        : "com.google.code.findbugs:jsr305:$ext.findbugsJsr305",
        guava                 : "com.google.guava:guava:$ext.guava",
        HikariCP              : "com.zaxxer:HikariCP:$ext.hikariCp",
        springdocUi           : "org.springdoc:springdoc-openapi-ui:$ext.springdoc",
        springdocWebMvc       : "org.springdoc:springdoc-openapi-webmvc-core:$ext.springdoc",
        annotationApi         : "javax.annotation:javax.annotation-api:$ext.javaxAnnotation",
        validationApi         : "javax.validation:validation-api:$ext.javaxValidator",
        equalsverifier        : "nl.jqno.equalsverifier:equalsverifier:$ext.equalsverifier",
        groovyAll             : "org.codehaus.groovy:groovy-all:$ext.groovy",
        hibernateEnvers       : "org.hibernate:hibernate-envers:$ext.hibernate",
        hibernateJava8        : "org.hibernate:hibernate-java8:$ext.hibernate",
        hibernateValidator    : "org.hibernate:hibernate-validator:$ext.hibernateValidator",
        hibernateJpa          : "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$ext.hibernateJpa",
        mapstructProcessor    : "org.mapstruct:mapstruct-processor:$ext.mapstruct",
        mapstruct             : "org.mapstruct:mapstruct:$ext.mapstruct",
        projectLombok         : "org.projectlombok:lombok:$ext.projectLombok",
        spockCore             : "org.spockframework:spock-core:$ext.spock",
        spockSpring           : "org.spockframework:spock-spring:$ext.spock",
        starterActuator       : "org.springframework.boot:spring-boot-starter-actuator:$ext.springBoot",
        starterDataJpa        : "org.springframework.boot:spring-boot-starter-data-jpa:$ext.springBoot",
        starterTest           : "org.springframework.boot:spring-boot-starter-test:$ext.springBoot",
        starterValidation     : "org.springframework.boot:spring-boot-starter-validation:$ext.springBoot",
        starterWeb            : "org.springframework.boot:spring-boot-starter-web:$ext.springBoot",
        starterCache          : "org.springframework.boot:spring-boot-starter-cache:$ext.springBoot",
        springWeb             : "org.springframework:spring-web:$ext.spring",
        springWebMvc          : "org.springframework:spring-webmvc:$ext.spring",
        springDataJpa         : "org.springframework.data:spring-data-jpa:$ext.springData",
        springContext         : "org.springframework:spring-context:$ext.spring",
        springBoot            : "org.springframework.boot:spring-boot:$ext.springBoot",
        springConfig          : "org.springframework.boot:spring-boot-configuration-processor:$ext.springBoot",
        slf4jApi              : "org.slf4j:slf4j-api:$ext.slf4j",
        h2Db                  : "com.h2database:h2:$ext.h2Db"
]
